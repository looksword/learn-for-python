Python MySQL

mysql-connector 是 MySQL 官方提供的驱动器。
python -m pip install mysql-connector


import mysql.connector


如果你的 MySQL 是 8.0 版本，密码插件验证方式发生了变化，
早期版本为 mysql_native_password，8.0 版本为 caching_sha2_password，所以需要做些改变：
先修改 my.ini 配置：
	[mysqld]
	default_authentication_plugin=mysql_native_password
然后在 mysql 下执行以下命令来修改密码：
	ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码';





创建数据库连接
	mydb = mysql.connector.connect(
	  host="localhost",       # 数据库主机地址
	  user="yourusername",    # 数据库用户名
	  passwd="yourpassword"   # 数据库密码
	)

创建数据库使用 "CREATE DATABASE" 语句，以下创建一个名为 runoob_db 的数据库：
	mycursor = mydb.cursor()
	mycursor.execute("CREATE DATABASE runoob_db")

可以使用 "SHOW DATABASES" 语句来查看数据库是否存在：
	mycursor = mydb.cursor()
	mycursor.execute("SHOW DATABASES")
	for x in mycursor:
		print(x)	# 输出所有数据库列表
	


创建数据表使用 "CREATE TABLE" 语句，
创建数据表前，需要确保数据库已存在，以下创建一个名为 sites 的数据表：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	mycursor.execute("CREATE TABLE sites (name VARCHAR(255), url VARCHAR(255))")



创建表的时候我们一般都会设置一个主键（PRIMARY KEY），
我们可以使用 "INT AUTO_INCREMENT PRIMARY KEY" 语句来创建一个主键，主键起始值为 1，逐步递增。
如果我们的表已经创建，我们需要使用 ALTER TABLE 来给表添加主键：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	mycursor.execute("ALTER TABLE sites ADD COLUMN id INT AUTO_INCREMENT PRIMARY KEY")



插入数据使用 "INSERT INTO" 语句：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	sql = "INSERT INTO sites (name, url) VALUES (%s, %s)"
	val = ("RUNOOB", "https://www.runoob.com")
	mycursor.execute(sql, val)
	mydb.commit()    # 数据表内容有更新，必须使用到该语句
	print(mycursor.rowcount, "记录插入成功。")



批量插入使用 executemany() 方法，该方法的第二个参数是一个元组列表，包含了我们要插入的数据：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	sql = "INSERT INTO sites (name, url) VALUES (%s, %s)"
	val = [
	  ('Google', 'https://www.google.com'),
	  ('Github', 'https://www.github.com'),
	  ('Taobao', 'https://www.taobao.com'),
	  ('stackoverflow', 'https://www.stackoverflow.com/')
	]
	mycursor.executemany(sql, val)
	mydb.commit()    # 数据表内容有更新，必须使用到该语句
	print(mycursor.rowcount, "记录插入成功。")



查询数据使用 SELECT 语句：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	mycursor.execute("SELECT * FROM sites")
	myresult = mycursor.fetchall()     # fetchall() 获取所有记录
	for x in myresult:
	  print(x)
如果我们只想读取一条数据，可以使用 fetchone() 方法：
	myresult = mycursor.fetchone()
	print(myresult)



删除记录使用 "DELETE FROM" 语句：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	sql = "DELETE FROM sites WHERE name = 'stackoverflow'"
	mycursor.execute(sql)
	mydb.commit()
	print(mycursor.rowcount, " 条记录删除")



数据表更新使用 "UPDATE" 语句：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	sql = "UPDATE sites SET name = 'ZH' WHERE name = 'Zhihu'"
	mycursor.execute(sql)
	mydb.commit()
	print(mycursor.rowcount, " 条记录被修改")



删除表使用 "DROP TABLE" 语句， IF EXISTS 关键字是用于判断表是否存在，只有在存在的情况才删除：
	import mysql.connector
	mydb = mysql.connector.connect(
	  host="localhost",
	  user="root",
	  passwd="123456",
	  database="runoob_db"
	)
	mycursor = mydb.cursor()
	sql = "DROP TABLE IF EXISTS sites"  # 删除数据表 sites
	mycursor.execute(sql)









